<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>fluid 主题优化</title>
    <link href="/2025/02/07/fluid%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <url>/2025/02/07/fluid%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<blockquote><p>根目录是 <code>C:\blog</code>, 主题目录是 <code>C:\blog\node_modules\hexo-theme-fluid</code></p></blockquote><h2 id="%E5%9B%BA%E5%AE%9A%E8%83%8C%E6%99%AF%E5%92%8C%E8%AE%BE%E7%BD%AE%E9%80%8F%E6%98%8E%E5%BA%A6" tabindex="-1" id="固定背景和设置透明度">固定背景和设置透明度</h2><ol><li class="lvl-3"><p>在根目录下新建一个 scripts 目录，里面添加一个 bg.js 的文件</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123;<span class="hljs-attr">root</span>: siteRoot = <span class="hljs-string">&quot;/&quot;</span>&#125; = hexo.<span class="hljs-property">config</span>;<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;body_begin&quot;</span>, <span class="hljs-string">`&lt;div id=&quot;web_bg&quot;&gt;&lt;/div&gt;`</span>);<br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&quot;body_end&quot;</span>,<span class="hljs-string">`&lt;script src=&quot;<span class="hljs-subst">$&#123;siteRoot&#125;</span>js/backgroundize.js&quot;&gt;&lt;/script&gt;`</span>);<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>在主题目录的 <code>source/js/</code> 添加 <code>backgroundize.js</code> 文件</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 在电脑端显示的背景图片链接</span><br><span class="hljs-keyword">const</span> desktopBgImageUrl = <span class="hljs-string">&quot;url(&#x27;/img/default.webp&#x27;)&quot;</span>;<br><br><span class="hljs-comment">// 在电脑端设置背景图片</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#web_bg&#x27;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">`background-image: <span class="hljs-subst">$&#123;desktopBgImageUrl&#125;</span>;position: fixed;width: 100%;height: 100%;z-index: -1;background-size: cover;`</span>);<br><br><span class="hljs-comment">// 设置 banner 的背景图片为空</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#banner&quot;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-image: none&#x27;</span>);<br><br><span class="hljs-comment">// 设置 banner 的. mask 背景颜色透明</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;#banner .mask&quot;</span>).<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;style&#x27;</span>, <span class="hljs-string">&#x27;background-color: rgba(0,0,0,0)&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>添加 <code>glassBg.css</code> 文件</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#board</span> &#123;<br>-webkit-<span class="hljs-attribute">backdrop-filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">15px</span>);<br><span class="hljs-attribute">backdrop-filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">15px</span>);<br>&#125;<br><br><span class="hljs-selector-id">#toc</span> &#123;<br><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">4rem</span>;<br><span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--board-bg-color);<br><span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>-webkit-<span class="hljs-attribute">backdrop-filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">15px</span>);<br><span class="hljs-attribute">backdrop-filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">15px</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>在 <code>_config.fluid.yml</code> 文件中找到 <code>custom_js</code> 和 <code>custom_css</code> 把上述文件添加进去</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">custom_js:<br>- /js/backgroundize.js<br>custom_css:<br>- /css/glassBg.css<br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>在 <code>_config.fluid.yml</code> 文件中找到并替换</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">board_color: <span class="hljs-string">&quot;#ffffff80&quot;</span><br>board_color_dark: <span class="hljs-string">&quot;#00000080&quot;</span><br></code></pre></td></tr></table></figure></li><li class="lvl-3"><p>使用 <code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code> 查看</p></li></ol><h2 id="%E6%B7%BB%E5%8A%A0%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4" tabindex="-1" id="添加运行时间">添加运行时间</h2><p>在主题目录下的 <code>layout/_partials/footer.ejs</code> 最后的 <code>&lt;/div&gt;</code> 前面添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;</span> 正在载入天数...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;times&quot;</span>&gt;</span> 载入时分秒...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span><br><span class="language-javascript">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">createtime</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> grt= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;1/12/2025 01:15:00&quot;</span>);</span><br><span class="language-javascript">        now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>);</span><br><span class="language-javascript">        days = (now - grt) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>;</span><br><span class="language-javascript">        dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days);</span><br><span class="language-javascript">        hours = (now - grt) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum);</span><br><span class="language-javascript">        hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours);</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;</span><br><span class="language-javascript">            hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        minutes = (now - grt) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum);</span><br><span class="language-javascript">        mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes);</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;</span><br><span class="language-javascript">                mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        seconds = (now - grt) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum);</span><br><span class="language-javascript">        snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds);</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;</span><br><span class="language-javascript">                snum = <span class="hljs-string">&quot;0&quot;</span> + snum;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;🚀本网站已飞行 &amp; nbsp&quot;</span>+dnum+<span class="hljs-string">&quot;&amp;nbsp 天&quot;</span>;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot;&amp;nbsp 时 &amp; nbsp&quot;</span> + mnum + <span class="hljs-string">&quot;&amp;nbsp 分 &amp; nbsp&quot;</span> + snum + <span class="hljs-string">&quot;&amp;nbsp 秒&quot;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    <span class="hljs-built_in">setInterval</span>(<span class="hljs-string">&quot;createtime()&quot;</span>,<span class="hljs-number">250</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="%E6%89%93%E5%AD%97%E6%9C%BA%E6%B8%90%E5%8F%98" tabindex="-1" id="打字机渐变">打字机渐变</h2><p>在根目录的 _config.fluid.yml 文件中找到 custom_js 添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">custom_js</span>:<br>  - <span class="hljs-comment">//cdn.jsdelivr.net/gh/EmoryHuang/BlogBeautify@1.1/gradient.css # 头部打字机颜色效果渐变</span><br></code></pre></td></tr></table></figure><h2 id="%E4%BC%98%E5%8C%96%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E" tabindex="-1" id="优化版权声明">优化版权声明</h2><p>在主题目录下的 <code>layout/_partials/post/copyright.ejs</code> 文件添加一下内容</p><p><img src="/img/note/p5.webp" alt="cover"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span> 本文作者: <span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%- url_for() %&gt;&quot;</span>&gt;</span>&lt;%- config.author || theme.about.name || config.title %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span> 本文链接: <span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&lt;%- full_url_for(page.path) %&gt;&quot;</span>&gt;</span>&lt;%- full_url_for(page.path) %&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span> 版权声明: <span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>&lt;% if ([&#x27;BY&#x27;, &#x27;BY-SA&#x27;, &#x27;BY-ND&#x27;, &#x27;BY-NC&#x27;, &#x27;BY-NC-SA&#x27;, &#x27;BY-NC-ND&#x27;].indexOf(license) !== -1) &#123; %&gt;<br>    &lt;% var items = license.split(&#x27;-&#x27;) %&gt;<br>    &lt;% for (var idx = 0; idx &lt; items.length; idx++) &#123; %&gt;<br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;print-no-link&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://creativecommons.org/licenses/&lt;%= license.toLowerCase() %&gt;/4.0/&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hint--top hint--rounded&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;&lt;%- __(&#x27;post.copyright.&#x27;+ items[idx]) %&gt;&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-cc-&lt;%= items[idx].toLowerCase() %&gt;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    &lt;%&#125; %&gt;<br>    &lt;%&#125; else if (license === &#x27;ZERO&#x27;) &#123;  %&gt;<br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;print-no-link&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://creativecommons.org/publicdomain/zero/1.0/&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hint--top hint--rounded&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;&lt;%- __(&#x27;post.copyright.ZERO&#x27;) %&gt;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-cc-zero&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    &lt;%&#125; else &#123; %&gt;<br>    &lt;%- license %&gt;<br>    &lt;%&#125; %&gt;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>将添加内容以下除了倒数第一行都注释掉</p><h2 id="%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%BB%E9%A2%98%E4%B8%BA-material-%E4%B8%BB%E9%A2%98" tabindex="-1" id="设置代码块主题为-material-主题">设置代码块主题为 material 主题</h2><blockquote><p>如果对 material 主题不满意, 可在 <a href="https://highlightjs.org/demo">highlight js</a> 网站挑选喜欢的</p></blockquote><p>在 _config.fluid.yml 文件中找到 highlightjs 修改 style 和 style_dark</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">highlightjs:</span><br>    <span class="hljs-comment"># 在链接中挑选 style 填入</span><br>    <span class="hljs-comment"># Select a style in the link</span><br>    <span class="hljs-comment"># See: https://highlightjs.org/demo/</span><br>    <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;base16/material&quot;</span><br>    <span class="hljs-attr">style_dark:</span> <span class="hljs-string">&quot;base16/material&quot;</span><br></code></pre></td></tr></table></figure><h2 id="%E4%BB%A3%E7%A0%81%E5%9D%97%E7%BE%8E%E5%8C%96" tabindex="-1" id="代码块美化">代码块美化</h2><blockquote><p>可查看这位大佬的 <a href="https://blog.kevinchu.top/2023/07/17/hexo-theme-fluid-modify/#7-%E6%9B%BF%E6%8D%A2Mac%E9%A3%8E%E6%A0%BC%E4%BB%A3%E7%A0%81%E5%9D%97">代码块美化</a></p></blockquote><h2 id="%E5%BF%85%E5%BA%94%E6%94%B6%E5%BD%95" tabindex="-1" id="必应收录">必应收录</h2><p>打开网站<a href="https://www.bing.com/webmasters">Bing Webmaster Tools</a>登录</p><p>添加网站选择手动添加</p><p>验证网站下载<code>BingSiteAuth.xml</code>文件，将文件放在<code>blog/source</code>目录下，使用<code>hexo cl; hexo d -g</code>推送到github仓库里，在Webmaster页面验证即可</p><p>添加网站地图在<code>blog/</code>下打开powershell，输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install hexo<span class="hljs-literal">-generator-sitemap</span> <span class="hljs-literal">--save</span><br></code></pre></td></tr></table></figure><p>在<code>blog/_config.yml</code>最后添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">sitemap:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">sitemap.xml</span><br></code></pre></td></tr></table></figure><p><code>hexo cl; hexo d -g</code>推送到github上</p><p>提交网站地图,输入sitemap.xml位置，我的是<code>https://www.wcisns.top/sitemap.xml</code></p><p>URL检查,请求编制索引</p><p>URL检查遇到的问题在_config.yml<br>标题必须不少于15字<br>description不少于25字在<code>blog/node_modules/hexo-theme-fluid/layout/layout.ejs</code><code>&lt;body&gt;</code>标签后面添加<code>&lt;h1&gt;&lt;%= page.title %&gt;&lt;/h1&gt;</code></p>]]></content>
    
    
    <categories>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Fluid 主题</tag>
      
      <tag>主题优化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github 部署 Hexo 添加 README 文件</title>
    <link href="/2025/01/10/Github%E9%83%A8%E7%BD%B2Hexo%E6%B7%BB%E5%8A%A0README%E6%96%87%E4%BB%B6/"/>
    <url>/2025/01/10/Github%E9%83%A8%E7%BD%B2Hexo%E6%B7%BB%E5%8A%A0README%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>在博客的根目录的 <code>source</code> 目录添加 <code>README.md</code> 文件</p><p>在根目录的 <code>_config.yml</code> 文件中找到 <code>skip_render</code></p><p>写入 <code>README.md</code>，如下图：</p><p><img src="/img/note/p4.webp" alt="cover"></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Github</tag>
      
      <tag>Hexo</tag>
      
      <tag>README</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid 主题配置</title>
    <link href="/2025/01/09/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/01/09/fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-%E5%AE%89%E8%A3%85-%E4%BD%BF%E7%94%A8" tabindex="-1" id="Hexo-安装-使用">Hexo 安装 使用</h2><h3 id="%E4%B8%8B%E8%BD%BD-hexo" tabindex="-1" id="下载-Hexo">下载 Hexo</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install <span class="hljs-literal">-g</span> hexo<span class="hljs-literal">-cli</span><br></code></pre></td></tr></table></figure><h3 id="%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2" tabindex="-1" id="创建博客">创建博客</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo init blog<br></code></pre></td></tr></table></figure><h3 id="%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0" tabindex="-1" id="创建文章">创建文章</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo new text<br></code></pre></td></tr></table></figure><h3 id="%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2" tabindex="-1" id="创建页面">创建页面</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo new page test<br></code></pre></td></tr></table></figure><h3 id="%E9%A2%84%E8%A7%88%E5%92%8C%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99" tabindex="-1" id="预览和部署网站">预览和部署网站</h3><h4 id="%E9%A2%84%E8%A7%88%E7%BD%91%E7%AB%99" tabindex="-1" id="预览网站">预览网站</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><h4 id="%E9%83%A8%E7%BD%B2%E7%BD%91%E7%AB%99" tabindex="-1" id="部署网站">部署网站</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install hexo<span class="hljs-literal">-deployer-git</span><br></code></pre></td></tr></table></figure><p>在根目录下_config.yml 配置:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br> <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br> <span class="hljs-attr">repo:</span> <span class="hljs-string">&#x27;git@github.com:your name/your repositories&#x27;</span> <span class="hljs-comment"># 仓库地址，可选择 ssh 和 https 两种</span><br> <span class="hljs-attr">branch:</span> <span class="hljs-string">&#x27;main&#x27;</span> <span class="hljs-comment"># 分支</span><br></code></pre></td></tr></table></figure><p><code>hexo clean &amp;&amp; hexo g -d</code></p><h2 id="fluid-%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85" tabindex="-1" id="fluid-主题安装">fluid 主题安装</h2><p>终端进入 blog 的根目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm install <span class="hljs-literal">--save</span> hexo<span class="hljs-literal">-theme-fluid</span><br></code></pre></td></tr></table></figure><p>把 hexo-theme-fluid 目录的_config.yml 复制到 blog 根目录的_config.fluid.yml 文件</p><h3 id="%E6%9B%B4%E6%96%B0-fluid-%E4%B8%BB%E9%A2%98" tabindex="-1" id="更新-fluid-主题">更新 fluid 主题</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">npm update <span class="hljs-literal">--save</span> hexo<span class="hljs-literal">-theme-fluid</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>fluid</tag>
      
      <tag>主题配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PowerShell7</title>
    <link href="/2025/01/06/Powershell7/"/>
    <url>/2025/01/06/Powershell7/</url>
    
    <content type="html"><![CDATA[<h2 id="pwsh-%E7%9A%84%E5%AE%89%E8%A3%85" tabindex="-1" id="Pwsh-的安装">Pwsh 的安装</h2><p>Pwsh 的安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 显示当前 powershell 版本号</span><br><span class="hljs-variable">$PSVersionTable</span>.PSVersion<br><br><span class="hljs-comment"># 显示当前最新的可用的版本 正常版和预览版</span><br>winget search Microsoft.PowerShell<br><br><span class="hljs-comment"># 使用 Winget 安装 PowerShell</span><br>winget install <span class="hljs-literal">--id</span> Microsoft.Powershell <span class="hljs-literal">--source</span> winget<br></code></pre></td></tr></table></figure><h2 id="%E4%BD%BF%E7%94%A8-pwsh(powershell7)" tabindex="-1" id="使用-Pwsh-PowerShell7">使用 Pwsh(PowerShell7)</h2><p>win+R 键，打开运行，输入 pwsh，即可</p><h2 id="pwsh-%E9%85%8D%E7%BD%AE" tabindex="-1" id="Pwsh-配置">Pwsh 配置</h2><p>添加自动补全 (无需 Tab 键):</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 已输入过的命令：</span><br><span class="hljs-built_in">Set-PSReadLineOption</span> <span class="hljs-literal">-PredictionSource</span> <span class="hljs-built_in">History</span><br><br><span class="hljs-comment"># 没有输入过的命令：</span><br><span class="hljs-built_in">Set-PSReadLineOption</span> <span class="hljs-literal">-ShowToolTips</span><br><br><span class="hljs-comment"># 在 pwsh 的属性、快捷方式、目标，用下行代码替代，可永久使用智能提示</span><br><span class="hljs-string">&quot;C:\Program Files\PowerShell\7\pwsh.exe&quot;</span> <span class="hljs-literal">-noe</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;&amp;&#123;Set-PSReadLineOption -PredictionSource History -ShowToolTips&#125;&quot;</span> <span class="hljs-literal">-WorkingDirectory</span> ~<br></code></pre></td></tr></table></figure><dl><dt>设置快捷键：</dt><dd>点击终端标题栏的下三角键</dd><dd>点击 <strong>设置</strong>，找到 <strong>操作</strong></dd><dd>找到 <strong>新建标签页</strong>，修改快捷键为 <em>Ctrl+Alt+T</em>，<strong>保存</strong> 即可</dd></dl><blockquote><p><code>Get-PSReadlineOption</code> 可以查看历史命令的保存路径</p></blockquote><h3 id="%E5%AE%89%E8%A3%85%E3%80%81%E4%BD%BF%E7%94%A8-oh-my-posh" tabindex="-1" id="安装、使用-oh-my-posh">安装、使用 oh-my-posh</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 安装 oh-my-posh</span><br>winget install <span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span><br><br><span class="hljs-comment"># 添加 ohmyposh 到启动文件中</span><br>notepad <span class="hljs-variable">$PROFILE</span> <span class="hljs-comment"># 使用记事本打开启动文件</span><br><span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span> init pwsh | <span class="hljs-built_in">Invoke-Expression</span> <span class="hljs-comment"># 把这行代码添加其中保存</span><br><br><span class="hljs-built_in">Get-PoshThemes</span> <span class="hljs-comment"># 查看已有的主题</span><br><br><span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span> init pwsh <span class="hljs-literal">--config</span> <span class="hljs-string">&quot;<span class="hljs-variable">$env:POSH_THEMES_PATH</span>/neko.omp.json&quot;</span> | <span class="hljs-built_in">Invoke-Expression</span> <span class="hljs-comment"># 把没加 --config 参数的替换为这行, 添加一个叫 neko 的主题</span><br></code></pre></td></tr></table></figure><p>把 <code>C:\Users\chpw2\AppData\Local\Programs\oh-my-posh\themes</code> 这个路径添加为名叫 <code>POSH_THEMES_PATH</code> 的新建环境变量</p><h2 id="%E5%AE%89%E8%A3%85%E5%AD%97%E4%BD%93" tabindex="-1" id="安装字体">安装字体</h2><p><a href="https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.zip">Firacode 字体文件下载地址</a></p><p>安装好 <strong>Firacode</strong> 字体后在终端设置里修改字体，保存退出</p><h2 id="%E5%AE%89%E8%A3%85-scoop" tabindex="-1" id="安装-Scoop">安装 Scoop</h2><p>具体查看 <a href="https://gitee.com/scoop-installer">Scoop</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 脚本执行策略更改，默认自动同意</span><br><span class="hljs-built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="hljs-literal">-scope</span> CurrentUser <span class="hljs-literal">-Force</span><br><br><span class="hljs-comment"># 执行安装命令（默认安装在用户目录下，如需更改请执行 “自定义安装目录” 命令）</span><br><span class="hljs-built_in">iwr</span> <span class="hljs-literal">-useb</span> scoop.<span class="hljs-number">201704</span>.xyz | <span class="hljs-built_in">iex</span><br><br><br><span class="hljs-comment">## 自定义安装目录（注意将目录修改为合适位置)</span><br><span class="hljs-built_in">irm</span> scoop.<span class="hljs-number">201704</span>.xyz <span class="hljs-literal">-outfile</span> <span class="hljs-string">&#x27;install.ps1&#x27;</span><br><br>.\install.ps1 <span class="hljs-literal">-ScoopDir</span> <span class="hljs-string">&#x27;E:\Scoop&#x27;</span> <span class="hljs-literal">-ScoopGlobalDir</span> <span class="hljs-string">&#x27;E:\GlobalScoopApps&#x27;</span><br><br><span class="hljs-comment"># 切换分支到 develop</span><br>scoop config scoop_branch develop<br><br><span class="hljs-comment"># 重新拉取 git</span><br>scoop update<br><br><span class="hljs-comment"># 基本语法</span><br>scoop bucket add &lt;别名&gt; &lt;git 地址 &gt;<br>scoop bucket <span class="hljs-built_in">rm</span> &lt;别名&gt;<br><br>scoop bucket add dorado https://gitee.com/scoop<span class="hljs-literal">-installer</span>/dorado<br>scoop bucket add scoopet https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoopet<br>scoop bucket add scoopcn https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoopcn<br>scoop bucket add scoop<span class="hljs-literal">-zapps</span> https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoop<span class="hljs-literal">-zapps</span><br>scoop bucket add <span class="hljs-built_in">echo</span> https://gitee.com/scoop<span class="hljs-literal">-installer</span>/<span class="hljs-built_in">echo</span><span class="hljs-literal">-scoop</span><br>scoop bucket add aki https://gitee.com/scoop<span class="hljs-literal">-installer</span>/aki<span class="hljs-literal">-apps</span><br>scoop bucket add siku https://gitee.com/scoop<span class="hljs-literal">-installer</span>/siku<br>scoop bucket add lemon https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoop<span class="hljs-literal">-lemon</span><br>scoop bucket add cluttered https://gitee.com/scoop<span class="hljs-literal">-installer</span>/Cluttered<span class="hljs-literal">-bucket</span><br>scoop bucket add iszy https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoop<span class="hljs-literal">-iszy</span><br>scoop bucket add tomato https://gitee.com/scoop<span class="hljs-literal">-installer</span>/tomato<br>scoop bucket add muggle https://gitee.com/scoop<span class="hljs-literal">-installer</span>/scoop<span class="hljs-literal">-muggle</span><br><br><span class="hljs-comment"># 查看已知 bucket</span><br>scoop bucket known<br></code></pre></td></tr></table></figure><h2 id="%E5%AE%89%E8%A3%85-neovim" tabindex="-1" id="安装-NeoVim">安装 NeoVim</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># 安装必备软件</span><br>scoop install neovim neovide git lazygit gcc ripgrep fd unzip tree<span class="hljs-literal">-sitter</span> luarocks<br><br><span class="hljs-comment"># 下载安装 LazyVim 配置</span><br>git clone git@github.com:LazyVim/starter <span class="hljs-variable">$env:LOCALAPPDATA</span>\nvim <span class="hljs-literal">--depth</span>=<span class="hljs-number">1</span><br><br><span class="hljs-comment"># 为&#x27;nvim&#x27;设置别名为&#x27;vim&#x27;</span><br><span class="hljs-built_in">Set-Alias</span> <span class="hljs-literal">-Name</span> vim <span class="hljs-literal">-Value</span> <span class="hljs-string">&#x27;nvim&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="nodejs-%E5%AE%89%E8%A3%85" tabindex="-1" id="NodeJS-安装">NodeJS 安装</h3><p><a href="https://nodejs.org/zh-cn/download/package-manager">NodeJS 安装方法</a>:</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># installs fnm (Fast Node Manager)</span><br>winget install Schniz.fnm<br><span class="hljs-comment"># configure fnm environment</span><br>fnm env <span class="hljs-literal">--use-on-cd</span> | <span class="hljs-built_in">Out-String</span> | <span class="hljs-built_in">Invoke-Expression</span><br><span class="hljs-comment"># download and install Node.js</span><br>fnm use <span class="hljs-literal">--install-if-missing</span> <span class="hljs-number">20</span><br><span class="hljs-comment"># verifies the right Node.js version is in the environment</span><br>node <span class="hljs-literal">-v</span> <span class="hljs-comment"># should print `v20.17.0`</span><br><span class="hljs-comment"># verifies the right npm version is in the environment</span><br>npm <span class="hljs-literal">-v</span> <span class="hljs-comment"># should print `10.8.2`</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Powershell7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NuShell</title>
    <link href="/2025/01/06/nushell/"/>
    <url>/2025/01/06/nushell/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Windows11 使用 Wezterm+NuShell+Starship</p><p>安装字体 <a href="https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip">JetBrains Mono</a></p></blockquote><h2 id="wezterm" tabindex="-1" id="Wezterm">Wezterm</h2><p><a href="https://github.com/wez/wezterm/releases/download/20240203-110809-5046fc22/WezTerm-20240203-110809-5046fc22-setup.exe">Wezterm Windows 下载地址</a></p><p><a href="https://github.com/KevinSilvester/wezterm-config.git">Wezterm 配置</a></p><h2 id="nushell" tabindex="-1" id="NuShell">NuShell</h2><p><a href="https://github.com/nushell/nushell/releases/download/0.98.0/nu-0.98.0-x86_64-pc-windows-msvc.msi">NuShell Windows 下载地址</a></p><p>使用 nu 切换盘符: <code>cd 盘符:/</code></p><h2 id="starship" tabindex="-1" id="Starship">Starship</h2><p><a href="https://github.com/starship/starship/releases/download/v1.20.1/starship-i686-pc-windows-msvc.msi">Starship Windows 下载地址</a></p><p>在 NuShell 里使用 starship：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/.cache/starship<br>starship init nu | save -f ~/.cache/starship/init.nu<br></code></pre></td></tr></table></figure><p>在 <a href="https://starship.rs/zh-CN/presets/">Wtarship themes</a> 查看主题</p><p>这里使用 <a href="https://starship.rs/zh-CN/presets/pastel-powerline">pastel-powerline</a> 主题输入下行代码即可:</p><p><code>starship preset pastel-powerline -o ~/.config/starship.toml</code></p><p>添加以下语句后重开一个终端就能出现效果了 (使用 <code>echo $nu.env-path</code> 查看文件路径)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动 starship</span><br>use ~/.cache/starship/init.nu<br><br><span class="hljs-comment"># 定义别名和目录常量</span><br><span class="hljs-built_in">alias</span> vim = nvim<br></code></pre></td></tr></table></figure><h2 id="wezterm-%E5%BF%AB%E6%8D%B7%E9%94%AE" tabindex="-1" id="Wezterm-快捷键">Wezterm 快捷键</h2><p><a href="https://github.com/KevinSilvester/wezterm-config.git">Wezterm 使用配置</a></p><blockquote><p>super -&gt; Alt</p><p>super_rev -&gt; Ctrl+Alt</p></blockquote><h3 id="%E6%A0%87%E7%AD%BE%E9%A1%B5" tabindex="-1" id="标签页">标签页</h3><p><code>super+[</code>: 向左查看标签页<br><code>super_rev+[</code>: 向左移动标签页<br><code>super+]</code>: 向右查看标签页<br><code>super_rev+]</code>: 向右移动标签页</p><p><code>super+T</code>: 新建一个标签页<br><code>super_rev+T</code>: 新建一个 <code>wsl:ubuntu</code> 标签页</p><p><code>super+W</code>: 关闭一个标签页<br><code>super_rev+W</code>: 关闭一个标签页</p><h3 id="%E5%85%89%E6%A0%87%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E7%A7%BB%E5%8A%A8" tabindex="-1" id="光标在命令行中移动">光标在命令行中移动</h3><p><code>super+-&gt;</code>: 移动至行尾<br><code>super+&lt;-</code>: 移动至行首<br><code>super+backspace</code>: 清除整行</p><h3 id="%E7%AA%97%E5%8F%A3" tabindex="-1" id="窗口">窗口</h3><p><code>super+n</code>: 新建一个窗口</p><h3 id="%E9%87%8D%E5%91%BD%E5%90%8D" tabindex="-1" id="重命名">重命名</h3><p><code>super+0</code>: 重命名当前标签页<br><code>super_rev+0</code>: 撤销重命名</p><h3 id="%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87" tabindex="-1" id="背景图片">背景图片</h3><p><code>super+/</code>: 随机选择背景图片<br><code>super+,</code>: 下一张图片<br><code>super+.</code>: 上一张图片<br><code>super_rev+/</code>: 列表选择图片<br><code>super+b</code>: 切换有 / 无背景图片模式</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NuShell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>U 盘 EFI 分区删除</title>
    <link href="/2025/01/06/u%E7%9B%98EFI%E5%88%86%E5%8C%BA%E5%88%A0%E9%99%A4/"/>
    <url>/2025/01/06/u%E7%9B%98EFI%E5%88%86%E5%8C%BA%E5%88%A0%E9%99%A4/</url>
    
    <content type="html"><![CDATA[<p>在运行窗口输入 <code>powershell</code> 进入终端，输入 <code>diskpart</code> 并按下 Enter 键</p><p>在弹出的窗口输入 <code>list disk</code> 找到和 u 盘内存相近的磁盘, 我的是 <strong>磁盘 1</strong></p><p>输入 <code>select disk 1</code> 选择磁盘 1</p><p>输入 <code>clean</code> 清空磁盘</p><blockquote><p>这时进入 <strong>计算机管理</strong>, 找到 <strong>磁盘管理</strong>，找到 <strong>磁盘 1</strong>(U 盘)，这时 <u>右击</u>，发现无法创建分区，需要 <u>右击</u> 左边显示 <em>磁盘 1基本信息的区域</em> 选择 <strong>初始化磁盘</strong>，在弹出来的窗口中选择 <strong>GPT</strong>，确定，就能创建分区了</p><p><code>Windows+X</code> 再按 <code>K</code> 键就能调出 <strong>磁盘管理</strong> 了</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>U 盘</tag>
      
      <tag>EFI 分区</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH 使用</title>
    <link href="/2025/01/06/ssh%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/01/06/ssh%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="ssh-%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95" tabindex="-1" id="SSH-远程登录">SSH 远程登录</h2><h3 id="%E7%99%BB%E5%BD%95" tabindex="-1" id="登录">登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh root@172.16.124.24 用户名@主机名 <br></code></pre></td></tr></table></figure><h3 id="%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95" tabindex="-1" id="免密登录">免密登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa <span class="hljs-comment"># 生成密钥</span><br>scp C:\Users\Admin\.ssh\id_rsa.pub root@172.16.124.24:/root/.ssh/id_rsa.pub.windows <span class="hljs-comment"># 把密钥文件拷贝到 linux 服务器上的. ssh 文件下并改名</span><br></code></pre></td></tr></table></figure><blockquote><p>接下来进入 linux 服务器把密钥文件的内容复制到 anthorized_keys 文件里</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh root@172.16.124.24<br><span class="hljs-built_in">cd</span> ~/.ssh<br><span class="hljs-built_in">cat</span> id_rsa.pub.windows &gt;&gt; authorized_keys<br>接下来登录 linux 服务器就不需要输入密码了<br><br>ssh root@172.16.124.24<br></code></pre></td></tr></table></figure><h2 id="github-ssh-%E4%B8%8B%E8%BD%BD-%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90" tabindex="-1" id="GitHub-SSH-下载-密钥生成">GitHub SSH 下载 密钥生成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#linux 没有的话下载 openssh</span><br>ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_name@email.com&quot;</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_ed25519.pub<br></code></pre></td></tr></table></figure><blockquote><p>请在 Git bash 或 PowerShell 中操作</p><p>登录 GitHub，点击头像，点击设置，找到 SSH and GPG Keys 选项，点击 SSH Keys 右边的 New SSH Key 按钮，标题给个恰当的密钥名字，把 <code>cat ~/.ssh/id_ed25519.pub</code> 的输出全部复制进 Key 里面，单击 Add SSH Key，接着输入你的 GitHub 登录密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com <span class="hljs-comment">#在终端中输入</span><br></code></pre></td></tr></table></figure><p>末尾出现下面的代表成功</p><p>Hi your_name! You’ve successfully authenticated, but GitHub does not provide shell access.</p><p>可以使用 SSH 下载方式了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 git@github.com:ryanoasis/nerd-fonts.git<br></code></pre></td></tr></table></figure><p><code>--depth=1</code>: 只下载最近一次的提交版本，可以避免把所有的历史提交记录下载下来</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>WSL2 安装配置</title>
    <link href="/2025/01/05/Wsl2%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/01/05/Wsl2%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="%E5%AE%89%E8%A3%85-wsl2" tabindex="-1" id="安装-WSL2">安装 WSL2</h2><ul class="lvl-0"><li class="lvl-2">启用适用于 Linux 的 Windows 子系统</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart<br></code></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启用虚拟化</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart<br></code></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启动 Hyper-V</p></li></ul><p>Windows+R 键，调出运行，键入 control，进入控制面板，进入程序，打开启动或关闭 Windows 功能，勾选 Hyper-V，重启</p><p><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" title="把链接拷贝到浏览器上">下载并安装 X64 的 WSL2 linux 内核升级包</a></p><p>设置 WSL 默认版本</p><p><code>wsl --set-default-version 2</code></p><h2 id="%E5%AE%89%E8%A3%85-linux" tabindex="-1" id="安装-Linux">安装 Linux</h2><p>打开 Store 商店，输入 Arch，下载</p><p>下载完了，打开，输入用户名，密码</p><h2 id="%E9%85%8D%E7%BD%AE-arch" tabindex="-1" id="配置-Arch">配置 Arch</h2><h3 id="%E6%8D%A2%E6%BA%90" tabindex="-1" id="换源">换源</h3><p>切换 Arch linux、Arch linux CN 源</p><p><a href="https://mirrors.ustc.edu.cn/help/">中科大软件源</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Syyuu<br><span class="hljs-built_in">sudo</span> pacman-key --lsign-key <span class="hljs-string">&quot;farseerfc@archlinux.org&quot;</span><br><span class="hljs-built_in">sudo</span> pacman -S archlinuxcn-keyring<br><span class="hljs-built_in">sudo</span> pacman -S yay<br><span class="hljs-built_in">sudo</span> passwd root <span class="hljs-comment"># 修改 root 密码</span><br></code></pre></td></tr></table></figure><p>下载 nvim、zsh &amp; ohmyzsh、yay</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/shells <span class="hljs-comment"># 查看 zsh 是否安装</span><br><span class="hljs-built_in">sudo</span> pacman -S zsh<br>git <span class="hljs-built_in">clone</span> --depth=1 git@github.com:ryanoasis/nerd-fonts.git<br><span class="hljs-built_in">cd</span> nerd-fonts<br>./install.sh<br></code></pre></td></tr></table></figure><h3 id="zsh-%26-ohmyzsh" tabindex="-1" id="zsh-ohmyzsh">zsh &amp; ohmyzsh</h3><p>ohmyzsh 安装：</p><ul class="lvl-0"><li class="lvl-2"><p>把 oh-my-zsh 项目 Clone 下来：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh<br></code></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>复制 .zshrc</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc<br></code></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>更改你的默认 Shell</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><p>zsh 插件：</p><ul class="lvl-0"><li class="lvl-2"><p>powerlevel10k(主题)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k<br></code></pre></td></tr></table></figure><p>把. zshrc 打开，找到 ZSH_THEME，把值改为 “powerlevel10k/powerlevel10k”</p></li><li class="lvl-2"><p>auto-suggestion(自动补全)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><p>把. zshrc 打开，找到 plugins=(git)，在 git 后面添加 zsh-autosuggestions</p></li><li class="lvl-2"><p>syntax highlighting(语法高亮)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br></code></pre></td></tr></table></figure><p>把 <code>.zshrc</code> 打开，找到 <code>plugins=(git)</code>，在 <code>git</code> 后面添加 <code>zsh-syntax-highlighting</code></p></li></ul><p>最后 <code>source ~/.zshrc</code></p><h3 id="nvim" tabindex="-1" id="nvim">nvim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S neovim<br>git <span class="hljs-built_in">clone</span> git@github.com:ayamir/nvimdots.git<br><span class="hljs-built_in">cd</span> nvimdots/scripts<br>./install.sh<br><span class="hljs-comment"># 如果始终无法安装成功，则执行下条命令</span><br><span class="hljs-built_in">rm</span> -fr ~/.local/share/nvim/site/lazy<br></code></pre></td></tr></table></figure><h3 id="nano-%E7%BC%96%E8%BE%91%E5%99%A8" tabindex="-1" id="nano-编辑器">nano 编辑器</h3><p><code>Ctrl+O</code>: 保存，按 <strong>回车</strong> 保存当前文件</p><p><code>Ctrl+X</code>: 退出</p><h2 id="%E8%BF%81%E7%A7%BB-wsl2" tabindex="-1" id="迁移-WSL2">迁移 WSL2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">wsl --shutdown <span class="hljs-comment">#关闭所有正在运行的实例</span><br>wsl -l -v <span class="hljs-comment">#查看 STATE 是否为 Stopped</span><br>wsl --<span class="hljs-built_in">export</span> Ubuntu  D:\Ubuntu_WSL2\Ubuntu.tar <span class="hljs-comment">#导出 Ubuntu 到 D 盘的 Ubuntu_WSL2 目录并创建一个 Ubuntu.tar 的归档文件</span><br>wsl --unregister Ubuntu <span class="hljs-comment">#注销 Ubuntu</span><br>wsl --import Ubuntu D:\Ubuntu_WSL2 D:\Ubuntu_WSL2\Ubuntu.tar <span class="hljs-comment">#把 Ubuntu.tar 重新注册为 linux 发行版</span><br>Ubuntu config --default-user chpw <span class="hljs-comment">#新建一个叫 chpw 用户</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arch</tag>
      
      <tag>Linux</tag>
      
      <tag>Windows</tag>
      
      <tag>WSL2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 上 VSCode.tar.gz 安装 VSCode</title>
    <link href="/2025/01/05/Linux%E4%B8%8AVSCode-tar-gz%E5%AE%89%E8%A3%85VSCode/"/>
    <url>/2025/01/05/Linux%E4%B8%8AVSCode-tar-gz%E5%AE%89%E8%A3%85VSCode/</url>
    
    <content type="html"><![CDATA[<blockquote><p>下载 &amp; 解压. tar.gz 安装包</p><p>把安装包放在 / opt / 目录中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf VSCode.tar.gz<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> VSCode /opt<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> -s /opt/VSCode /opt/code<br></code></pre></td></tr></table></figure><blockquote><p>创建快捷方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /usr/share/applications/code.desktop<br><span class="hljs-comment"># 添加内容</span><br>[Desktop Entry]<br>Name=Visual Studio Code<br>Type=Application<br>Exec=/opt/code/code<br>Icon=/opt/code/resources/app/resources/linux/code.png<br>Terminal=<span class="hljs-literal">false</span><br>Comment=Visual Studio Code<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>tar.gz</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 本地远程推送</title>
    <link href="/2025/01/05/Git%E6%9C%AC%E5%9C%B0%E8%BF%9C%E7%A8%8B%E6%8E%A8%E9%80%81/"/>
    <url>/2025/01/05/Git%E6%9C%AC%E5%9C%B0%E8%BF%9C%E7%A8%8B%E6%8E%A8%E9%80%81/</url>
    
    <content type="html"><![CDATA[<h2 id="github-%E6%9C%AC%E5%9C%B0%E9%85%8D%E7%BD%AE" tabindex="-1" id="GitHub-本地配置">GitHub 本地配置</h2><h3 id="%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0-git-%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE" tabindex="-1" id="配置本地-Git-全局设置">配置本地 Git 全局设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your_github_username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your_github_email@outlook.com&quot;</span><br></code></pre></td></tr></table></figure><h3 id="%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA-github-%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93" tabindex="-1" id="创建一个-GitHub-本地仓库">创建一个 GitHub 本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> e:\NoteBook                  <span class="hljs-comment"># 新建一个文件夹, 使用 cd 进入</span><br>git init                        <span class="hljs-comment"># 仓库初始化</span><br>git add *                       <span class="hljs-comment"># 把本地仓库中的内容全添加</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span>    <span class="hljs-comment"># 提交内容, &quot;first commit&quot; 是描述, 不会写就随便填</span><br>git branch -M main              <span class="hljs-comment">#</span><br>git remote add origin git@github.com:RestorerOfTheWorld/NoteBook.git<br>git push -u origin main         <span class="hljs-comment"># 把本地仓库推送到 GitHub 仓库上</span><br></code></pre></td></tr></table></figure><blockquote><p>新建后，以后可以用下面的命令把日常更新的内容推送到 GitHub 仓库中去</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&quot;commit&quot;</span><br>git push<br></code></pre></td></tr></table></figure><h3 id="%E6%9B%B4%E6%96%B0%E5%90%8C%E6%AD%A5%E6%9C%AC%E5%9C%B0-%2F-%E8%BF%9C%E7%A8%8B-url" tabindex="-1" id="更新同步本地-远程-URL">更新同步本地 / 远程 URL</h3><blockquote><p>如果更新了 GitHub 用户名可以使用下面的命令把本地 Git 的用户名同步成 GitHub 上的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v<br>git remote set-url origin new_url<br>git pull origin main<br></code></pre></td></tr></table></figure><h2 id="git-%E4%B8%8B%E8%BD%BD" tabindex="-1" id="Git-下载">Git 下载</h2><p>Windows 下载：<code>winget install Git.Git</code></p><h2 id="linux-%E4%B8%8B%E8%BD%BD" tabindex="-1" id="Linux-下载">Linux 下载</h2><ul class="lvl-0"><li class="lvl-2"><p>Debian/Ubuntu：<code>sudo apt install git</code></p></li><li class="lvl-2"><p>CentOS/Fedora：<code>sudo yum install git 或 sudo dnf install git</code></p></li><li class="lvl-2"><p>Arch/Manjaro：<code>sudo pacman -S git</code></p></li><li class="lvl-2"><p>MacOS 下载：<code>brew install git</code></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 安装 Windows</title>
    <link href="/2025/01/05/Docker%E5%AE%89%E8%A3%85Windows/"/>
    <url>/2025/01/05/Docker%E5%AE%89%E8%A3%85Windows/</url>
    
    <content type="html"><![CDATA[<p>系统为 Arch Linux，桌面为 Hyprland</p><h2 id="%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%94%AF%E6%8C%81-kvm" tabindex="-1" id="检查是否支持-KVM">检查是否支持 KVM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">egrep <span class="hljs-string">&quot;(svm|vmx)&quot;</span> /proc/cpuinfo<br></code></pre></td></tr></table></figure><h2 id="%E5%AE%89%E8%A3%85-docker%E3%80%81docker-compose" tabindex="-1" id="安装-Docker、Docker-compose">安装 Docker、Docker-compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S docker <span class="hljs-comment"># 安装 docker</span><br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> docker.service &amp;&amp; \<br><span class="hljs-built_in">sudo</span> systemctl start docker.service <span class="hljs-comment"># 开机自启和启动 docker</span><br><br><span class="hljs-built_in">sudo</span> usermod -aG docker <span class="hljs-variable">$USER</span> <span class="hljs-comment"># 创建 docker 用户</span><br><br><span class="hljs-built_in">sudo</span> pacman -S docker-compose <span class="hljs-comment"># 安装 docker-compose</span><br><span class="hljs-built_in">sudo</span> pacman -S bash-comletion<br></code></pre></td></tr></table></figure><h2 id="docker-%E6%93%8D%E4%BD%9C" tabindex="-1" id="Docker-操作">Docker 操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a<br>docker images<br>docker-compose up <span class="hljs-comment"># 启动 docker</span><br><span class="hljs-comment">#创建 docker-compose.yml 文件</span><br>vim ~/docker-compose.yml<br></code></pre></td></tr></table></figure><h2 id="%E5%AE%89%E8%A3%85-windows" tabindex="-1" id="安装-Windows">安装 Windows</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/dockur/windows.git<br><span class="hljs-built_in">cd</span> windows<br>docker build -t dockurr/windows . <span class="hljs-comment"># 安装 windows docker</span><br>docker pull ghcr.io/qemus/qemu-docker:6.11 <span class="hljs-comment"># 挂梯子 pull</span><br>paru -S wsdd virtio-win tini nginx<br></code></pre></td></tr></table></figure><p>下载 Windows ISO 镜像文件创建 docker-compose 文件，添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">version: <span class="hljs-string">&quot;3&quot;</span><br>services:<br>  windows:<br>    image: dockurr/windows<br>    container_name: windows<br>    devices:<br>      - /dev/kvm<br>    cap_add:<br>      - NET_ADMIN<br>    ports:<br>      - 8006:8006<br>      - 3389:3389/tcp<br>      - 3389:3389/udp<br>    stop_grace_period: 2m<br>    restart: on-failure<br>    environment:<br>      VERSION: <span class="hljs-string">&quot;http://winiso/Win10_22H2_Chinese_Simplified_x64v1.iso&quot;</span><br>      MANUAL: <span class="hljs-string">&quot;N&quot;</span><br>    volumes:<br>      - ./win:/storage<br>    depends_on:<br>      - winiso<br><br>  winiso:<br>    image: nginx:alpine<br>    container_name: winiso<br>    restart: on-failure<br>    volumes:<br>      - /home/kingofthunder/ISO:/usr/share/nginx/html<br></code></pre></td></tr></table></figure><p>使用 <code>docker compose up</code> 启动 Windows 镜像</p><p>在浏览器输入 <code>docker ip:8006</code> 即可使用</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch、Hyprland 实体机全安装教程</title>
    <link href="/2025/01/05/Arch%E3%80%81Hyprland%E5%AE%9E%E4%BD%93%E6%9C%BA%E5%85%A8%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2025/01/05/Arch%E3%80%81Hyprland%E5%AE%9E%E4%BD%93%E6%9C%BA%E5%85%A8%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="%E5%AE%89%E8%A3%85" tabindex="-1" id="安装">安装</h2><p>内容参考 <a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97#">Arch WiKi</a> Arch 提供了自动化安装脚本可以输入 <code>archinstall</code> 进行配置</p><h3 id="%E4%B8%8B%E8%BD%BD-arch-%E9%95%9C%E5%83%8F" tabindex="-1" id="下载-Arch-镜像">下载 Arch 镜像</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/2024.12.01/">Arch 2024.12.01 镜像</a></p><h3 id="%E9%AA%8C%E8%AF%81-iso-%E6%96%87%E4%BB%B6%E5%AF%86%E9%92%A5-sha256" tabindex="-1" id="验证-ISO-文件密钥-SHA256">验证 ISO 文件密钥 SHA256</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">certutil -hashfile 镜像文件. iso SHA256 <span class="hljs-comment"># 和官网密钥对比</span><br></code></pre></td></tr></table></figure><p><a href="https://archlinux.org/download/">Arch 官网下载界面</a> 密钥在这查看<img src="/img/note/P1.webp" alt="启动盘"></p><h3 id="%E5%88%B6%E4%BD%9C%E5%90%AF%E5%8A%A8%E7%9B%98" tabindex="-1" id="制作启动盘">制作启动盘</h3><p>进入 <a href="https://rufus.ie/en/">Rufus 官网</a> 下载 rufus 启动盘制作软件分区类型 GPT，目标系统类型 UEFI</p><p>如果是固态 U 盘就打开显示高级设备选项</p><p>勾选上显示 USB 外置硬盘</p><h3 id="%E9%AA%8C%E8%AF%81%E5%BC%95%E5%AF%BC%E6%A8%A1%E5%BC%8F" tabindex="-1" id="验证引导模式">验证引导模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /sys/firmware/efi/fw_platform_size <span class="hljs-comment"># 验证 UEFI 位数是 64 位或 32 位</span><br></code></pre></td></tr></table></figure><h3 id="%E8%BF%9E%E6%8E%A5-wifi" tabindex="-1" id="连接-WIFI">连接 WIFI</h3><p><code>rfkill unblock wifi</code> 解除网络接口软件屏蔽</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">iwctl <span class="hljs-comment"># 进入 [iwd]# 界面</span><br>device list <span class="hljs-comment"># 列出所有可用的适配器设备</span><br>device name set-property Powered on <span class="hljs-comment"># 把网络适配器打开</span><br>station name scan <span class="hljs-comment"># 扫描网络</span><br>station name get-networks <span class="hljs-comment"># 列出所有网络</span><br>station name connect SSID <span class="hljs-comment"># 连接网络</span><br><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出 [iwd]# 界面</span><br></code></pre></td></tr></table></figure><p>Name 是适配器名称，SSID 是无线网络名称</p><p>连接上了可使用 <code>ping archlinux.org</code> 测试网络是否通畅</p><h3 id="%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4" tabindex="-1" id="更新系统时间">更新系统时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">timedatectl set-ntp <span class="hljs-literal">true</span> <span class="hljs-comment"># 启用 NTP 同步</span><br></code></pre></td></tr></table></figure><h3 id="%E5%88%9B%E5%BB%BA%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA" tabindex="-1" id="创建硬盘分区">创建硬盘分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">fdisk -l <span class="hljs-comment"># 查看硬盘信息</span><br>fdisk 硬盘名称 <span class="hljs-comment"># 分区工具修改硬盘分区表，把路径写全</span><br></code></pre></td></tr></table></figure><h4 id="fdisk-%E5%88%9B%E5%BB%BA%E5%88%86%E5%8C%BA" tabindex="-1" id="fdisk-创建分区">fdisk 创建分区</h4><p>我的分区方案是一个 EFI 分区、一个 SWAP 分区、一个 /(根) 分区</p><p>输入 <code>g</code> 创建一个 GPT 分区表输入 <code>n</code> 创建分区</p><p>接下来依次是分区编号、起始扇区、结束扇区分区编号如果是默认直接回车即可、起始扇区也是结束扇区根据想要分区多大输入，1G 就输入 <code>+1G</code></p><p>512MB 就输入 <code>+512M</code> 输入 <code>p</code> 显示分区表输入 <code>w</code> 保存分区表写入磁盘输入 <code>q</code> 放弃更改后的分区表</p><h3 id="%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%88%86%E5%8C%BA" tabindex="-1" id="格式化分区">格式化分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs.ext4 根分区 <span class="hljs-comment"># 格式化 / 分区</span><br>mkswap swap 分区 <span class="hljs-comment"># 格式化 swap 分区</span><br>mkfs.fat -F 32 EFI 分区 <span class="hljs-comment"># 格式化 EFI 分区</span><br></code></pre></td></tr></table></figure><h3 id="%E6%8C%82%E8%BD%BD%E5%88%86%E5%8C%BA" tabindex="-1" id="挂载分区">挂载分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount 根分区 /mnt <span class="hljs-comment"># 把根分区挂载到 / mnt 目录</span><br>mount --<span class="hljs-built_in">mkdir</span> EFI 分区 /mnt/boot <span class="hljs-comment"># 把 EFI 分区挂载到 / mnt/boot 目录</span><br>swapon swap 分区 <span class="hljs-comment"># 启用 Swap 分区</span><br></code></pre></td></tr></table></figure><p>遵循先挂载到根分区，再挂载 EFI 分区，最后挂载其他分区</p><h3 id="%E9%85%8D%E7%BD%AE%E8%BD%AF%E4%BB%B6%E6%BA%90" tabindex="-1" id="配置软件源">配置软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -L <span class="hljs-string">&quot;https://archlinux.org/mirrorlist/?country=CN&amp;protocol=https&quot;</span> \<br>-o /etc/pacman.d/mirrorlist  <span class="hljs-comment"># 获取中国大陆的 https 镜像站</span><br></code></pre></td></tr></table></figure><p>进入 <code>/etc/pacma.d/mirrorlist</code> 文件找到想要的软件源把前面的 #去掉保存即可</p><h3 id="%E5%AE%89%E8%A3%85%E5%BF%85%E9%9C%80%E8%BD%AF%E4%BB%B6%E5%8C%85" tabindex="-1" id="安装必需软件包">安装必需软件包</h3><p><code>pacstrap -K /mnt base linux linux-firmware</code> 安装 linux 内核文件显示分区表如果计算机是 intel 的 CPU 追加 <code>intel-ucode</code>，AMD CPU 追加 <code>amd-ucode</code> 文件管理系统的用户工具：</p><p>ext4 <code>e2fsprogs</code>exfat <code>exfatprogs</code>Btrfs <code>btrfs-progs</code>XFS <code>xfsprogs</code></p><p>访问 RAID 分区的工具 <code>mdadm</code> 访问 LVM 分区的工具 <code>lvm2</code> 内建音频的 <code>sof-firmware</code>, 用于 Marvell 无线的 <code>linux-firmware-marvell</code>Broadcom wireless 的固件包 <code>broadcom-wl</code> 联网所需的程序 <code>modemmanager</code> 文件编辑器如 <code>nano</code>,<code>vim</code> 访问 man 和 info 页面中文档的工具:<code>man-db</code>,<code>man-pages</code>,<code>texinfo</code>ssh 工具 <code>openssh</code>、网络管理器 <code>networkmanager</code>sudo <code>sudo</code>、zsh <code>zsh</code>、git <code>git</code>、base-level <code>base-level</code>、nodejs <code>nodejs</code>、<code>npm</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacstrap -K /mnt base linux linux-firmware interl-ucode amd-ucode \<br>e2fsprogs exfatprogs btrfs-progs xfsprogs mdadm lvm2 sof-firmware \<br>linux-firmware-marvell broadcom-wl modemmanager nano vim man-db \<br>man-pages texinfo openssh networkmanager <span class="hljs-built_in">sudo</span> zsh git base-level \<br>nodejs npm<br></code></pre></td></tr></table></figure><h3 id="%E7%94%9F%E6%88%90-fstab-%E6%96%87%E4%BB%B6" tabindex="-1" id="生成-fstab-文件">生成 fstab 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab <span class="hljs-comment"># 分区挂载或启用后自动检测并生成系统文件</span><br></code></pre></td></tr></table></figure><h3 id="chroot-%E5%88%B0%E6%96%B0%E5%AE%89%E8%A3%85%E7%9A%84%E7%B3%BB%E7%BB%9F" tabindex="-1" id="chroot-到新安装的系统">chroot 到新安装的系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">arch-chroot /mnt <span class="hljs-comment"># chroot 到新安装系统</span><br></code></pre></td></tr></table></figure><h3 id="%E8%AE%BE%E7%BD%AE%E6%97%B6%E5%8C%BA" tabindex="-1" id="设置时区">设置时区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime <span class="hljs-comment"># 设置时区为上海</span><br>hwclock --sysohc <span class="hljs-comment"># 生成 / etc/adjtime 文件</span><br></code></pre></td></tr></table></figure><h3 id="%E5%8C%BA%E5%9F%9F%E5%8C%96%E6%9C%AC%E5%9C%B0%E8%AE%BE%E7%BD%AE" tabindex="-1" id="区域化本地设置">区域化本地设置</h3><p>打开 <code>/etc/locale.gen</code> 文件取消 <code>en_US.UTF-8 UFT-8</code> 和 <code>zh_CN.UTF-8 UTF-8</code> 的注释，保存退出执行 <code>locale-gen</code> 命令打开 <code>/etc/locale.conf</code> 文件添加 <code>LANG=en_US.UTF-8</code> 和 <code>LC_TIME=zh_CN.UTF-8</code> 两行</p><h3 id="%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE" tabindex="-1" id="网络配置">网络配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/hostname <span class="hljs-comment"># 在文件中输入主机名</span><br>ip <span class="hljs-built_in">link</span> show <span class="hljs-comment"># 查看网络接口</span><br>ip <span class="hljs-built_in">link</span> <span class="hljs-built_in">set</span> interface up <span class="hljs-comment"># 开启网络接口，interface 替换为网络接口</span><br>systemctl <span class="hljs-built_in">enable</span> NetworkManager.service <span class="hljs-comment"># 开机自启网络服务</span><br>systemctl <span class="hljs-built_in">enable</span> sshd.service <span class="hljs-comment"># 开机自启 sshd 服务</span><br></code></pre></td></tr></table></figure><h3 id="%E8%AE%BE%E7%BD%AE-root-%E5%AF%86%E7%A0%81" tabindex="-1" id="设置-root-密码">设置 root 密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd root <span class="hljs-comment"># 设置 root 密码</span><br></code></pre></td></tr></table></figure><h3 id="%E5%AE%89%E8%A3%85-grub-%E5%BC%95%E5%AF%BC%E7%A8%8B%E5%BA%8F" tabindex="-1" id="安装-Grub-引导程序">安装 Grub 引导程序</h3><p>安装软件包 <code>efibootmgr</code>、<code>grub</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 把 grub 安装到磁盘</span><br>grub-install --target=x86_64-efi \<br>--efi-directory=/boot --bootloader-id=GRUB<br><br><span class="hljs-comment"># 生成 cfg 文件</span><br>grub-mkconfig -o /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><p>进入 cfg 文件 找到 <code>set timeout=10</code> 把 10 改为 0 保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">exit</span> <span class="hljs-comment"># 退出 chroot 环境</span><br>umount -R /mnt <span class="hljs-comment"># 手动卸载全部被挂载分区</span><br>reboot <span class="hljs-comment"># 重启系统</span><br></code></pre></td></tr></table></figure><p>撤出启动盘进入系统后使用 <code>nmtui</code> 工具连接网络</p><h3 id="%E5%88%9B%E5%BB%BA%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7" tabindex="-1" id="创建普通用户">创建普通用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/shells <span class="hljs-comment"># 查看 zsh 路径</span><br>useradd -m -s <span class="hljs-string">&quot;/bin/zsh&quot;</span> <span class="hljs-string">&quot;username&quot;</span> <span class="hljs-comment">#创建普通用户，并为其指定默认 shell 为 zsh</span><br>passwd <span class="hljs-string">&quot;用户名&quot;</span><br></code></pre></td></tr></table></figure><p>使用 root 用户在 <code>/etc/sudoers</code> 文件里找到 <code>root ALL=(ALL:ALL) ALL</code> 复制在下一行粘贴，把 root 换成我们要添加的普通用户名，保存退出（这样就能普通用户就能使用 sudo 命令执行 root 权限了）建议用户名不要用中文、大写，否则 Hyprland 登陆会登不进去</p><p><img src="/img/note/p2.webp" alt=""></p><h2 id="%E9%85%8D%E7%BD%AE" tabindex="-1" id="配置">配置</h2><h3 id="%E9%85%8D%E7%BD%AE-archlinuxcn" tabindex="-1" id="配置-ArchLinuxCN">配置 ArchLinuxCN</h3><p>使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxcn/">清华的软件源</a> 在 <code>/etc/pacman.conf</code> 末尾添加以下语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[archlinuxcn]<br>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="hljs-variable">$arch</span><br></code></pre></td></tr></table></figure><p>添加本地信任 GPG key<code>sudo pacman-key --lsign-key &quot;farseerc@archlinux.org&quot;</code> 安装 archlinuxcn 密钥 <code>sudo pacman -Sy archlinuxcn-keyring</code> 配置 git 的全局设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your_github_username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your_github_email@email.com&quot;</span><br>git config --global init.defaultBranch main<br></code></pre></td></tr></table></figure><h3 id="npm-%E6%8D%A2%E6%BA%90" tabindex="-1" id="npm-换源">npm 换源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v &amp;&amp; npm -v <span class="hljs-comment"># 查看 npm、node 版本</span><br><br><span class="hljs-comment"># 更换华为源</span><br><br>npm config <span class="hljs-built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/<br><br>npm cache clean -f <span class="hljs-comment"># 清理缓存</span><br><br>npm config list <span class="hljs-comment"># 查看源</span><br><br>npm update <span class="hljs-comment"># 更新</span><br><br><span class="hljs-built_in">sudo</span> npm install -g npm@latest <span class="hljs-comment"># 更新 npm</span><br></code></pre></td></tr></table></figure><p>使用 npm 下载工具需要 root 权限</p><h3 id="github-ssh-%E4%B8%8B%E8%BD%BD" tabindex="-1" id="Github-SSH-下载">Github SSH 下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_name@email.com&quot;</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_ed25519.pub<br></code></pre></td></tr></table></figure><p>登录 <strong>github</strong>，点击 <strong>头像</strong>，点击 <strong>设置</strong>，找到 <strong>SSH and GPG keys</strong> 选项，点击 <strong>SSH keys</strong> 右边的 <strong>New SSH key</strong> 按钮，标题给个恰当的密钥名字，把 <code>cat ~/.ssh/id_ed25519.pub</code> 的输出全部复制进 Key 里面，单击 <strong>Add SSH key</strong>，接着输入你的 github 登录密码 <code>ssh -T git@github.com</code> 弹出以下内容，代表成功 <code>Hi your_name! You’ve successfully authenticated, but GitHub does not provide shell access.</code></p><h3 id="paru-%E5%AE%89%E8%A3%85" tabindex="-1" id="paru-安装">paru 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://aur.archlinux.org/paru.git<br><span class="hljs-built_in">cd</span> paru<br>makepkg -si<br></code></pre></td></tr></table></figure><p><code>sudo vim /etc/pacman.conf</code> 把 Color 的注释去掉 <code>sudo nano /etc/paru.conf</code> 把 BottomUp 注释去掉 <code>paru -Syu</code> 更新</p><h3 id="hyprland-%E5%AE%89%E8%A3%85" tabindex="-1" id="Hyprland-安装">Hyprland 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/JaKooLit/Arch-Hyprland.git<br><span class="hljs-built_in">cd</span> Arch-Hyprland<br><span class="hljs-built_in">chmod</span> +x install.sh<br>./install.sh<br></code></pre></td></tr></table></figure><p>安装过程需要全程联网并且建议挑网络好的时候安装如果安装过程中经常有软件下载失败可以先把最后的标记失败的软件安装上，再配置好 npm 和 github ssh 下载方式，再进行下载</p><p>安装一些娱乐软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -S google-chrome <span class="hljs-comment"># 安装 chrome 浏览器</span><br>paru -S baidunetdisk-bin <span class="hljs-comment"># 安装百度网盘</span><br>paru -S nerd-fonts <span class="hljs-comment"># 安装 nerd-fonts 字体</span><br>paru -S linuxqq wechat <span class="hljs-comment"># qq 和微信</span><br>paru bilibili <span class="hljs-comment"># 选择 1</span><br></code></pre></td></tr></table></figure><p>安装中文字体</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy adobe-source-han-sans-cn-fonts \<br>adobe-source-han-serif-cn-fonts noto-fonts-cjk \<br>wqy-microhei wqy-microhei wqy-microhei-lite \<br>wqy-bitmapfont ttf-arphic-ukai ttf-arphic-uming<br></code></pre></td></tr></table></figure><h3 id="oh-my-zsh" tabindex="-1" id="oh-my-zsh">oh-my-zsh</h3><p>如果安装完毕，终端没有 ohmyzsh 美化，可以自己尝试安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh<br><br><span class="hljs-built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc<br><br><span class="hljs-comment"># 主题 powerlevel10k</span><br>git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git \<br><span class="hljs-variable">$&#123;ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k<br><span class="hljs-comment"># 高亮</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git \<br><span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br><span class="hljs-comment"># 自动补全</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions \<br><span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br><br><span class="hljs-comment"># 进入. zshrc 文件</span><br><span class="hljs-comment"># 找到 ZSH_THEME，把值改为 &quot;powerlevel10k/powerlevel10k&quot;</span><br><span class="hljs-comment"># 找到 plugins=(git)，在 git 后面添加 zsh-autosuggestions zsh-syntax-highlighting</span><br></code></pre></td></tr></table></figure><h3 id="lazyvim" tabindex="-1" id="LazyVim">LazyVim</h3><p>保证装有 neovim 和 git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -Sy neovim<br>git <span class="hljs-built_in">clone</span> https://github.com/LazyVim/starter ~/.config/nvim<br><span class="hljs-built_in">rm</span> -rf ~/.config/nvim/.git<br>nvim <span class="hljs-comment"># 启动 nvim，安装插件</span><br><span class="hljs-comment"># 在~/.zshrc 文件中添加</span><br><span class="hljs-built_in">alias</span> vim=<span class="hljs-string">&#x27;nvim&#x27;</span> <span class="hljs-comment"># 需要先将 vim 删掉，如果出现有 vim 但是 pacman 找不到，可以先安装，再删除</span><br></code></pre></td></tr></table></figure><h3 id="%E7%94%B5%E6%B1%A0%E7%AE%A1%E7%90%86" tabindex="-1" id="电池管理">电池管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S tlp<br>paru -S tlpui-git <span class="hljs-comment"># 如果出现 git 仓库克隆失败可以先执行下行注释 git 命令克隆下来, 再安装</span><br><span class="hljs-comment"># git clone https://github.com/linrunner/TLP.git</span><br>paru -S tlp-rdw<br>paru -S tp_smapi-lts tp_smapi<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> tlp.service<br><span class="hljs-built_in">sudo</span> systemctl start tlp.service<br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> NetworkManager-dispatcher.service<br><span class="hljs-built_in">sudo</span> systemctl start NetworkManager-dispatcher.service<br><span class="hljs-built_in">sudo</span> systemctl mask systemd-rfkill.socket systemd-rfkill.service<br></code></pre></td></tr></table></figure><h3 id="%E9%A3%8E%E6%89%87%E6%8E%A7%E5%88%B6" tabindex="-1" id="风扇控制">风扇控制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">paru -S nbfc-linux-git<br></code></pre></td></tr></table></figure><h3 id="ufw-%E9%98%B2%E7%81%AB%E5%A2%99" tabindex="-1" id="ufw-防火墙">ufw 防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pacman -S ufw<br>systemctl <span class="hljs-built_in">enable</span> ufw<br>systemctl start ufw<br><br><span class="hljs-comment"># 操作</span><br><br><span class="hljs-built_in">sudo</span> ufw allow 3389/tcp<br><span class="hljs-built_in">sudo</span> ufw allow 3389/udp<br><span class="hljs-built_in">sudo</span> ufw reset<br><span class="hljs-built_in">sudo</span> ufw status<br><span class="hljs-built_in">sudo</span> ufw default deny<br></code></pre></td></tr></table></figure><h3 id="%E5%AE%89%E8%A3%85-vscode" tabindex="-1" id="安装-VSCode">安装 VSCode</h3><p>在 <a href="https://code.visualstudio.com/Download">VSCode 下载链接</a> 下载. tar.gz 包</p><p>把安装包 <code>tar -zxvf 安装包. tar.gz</code> 解压，放在 / opt / 目录下</p><p>使用 ln 命令创建软件链接 <code>ln -s /opt/code-stable-x64-1731511985 /opt/vscode</code></p><p>创建 <code>vscode.desktop</code> 文件 (快捷方式)<a href="about:blank">链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Desktop Entry]<br>Type=Application<br>Name=Visual Studio Code<br>Exec=/opt/vscode/code<br>Icon=/opt/vscode/resources/app/resources/linux/code.png<br>Comment=Visual Studio Code<br>Terminal=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>把文件放在 <code>/usr/share/applications/</code> 目录下，结束</p><p><img src="/img/note/p3.webp" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Arch</tag>
      
      <tag>Linux</tag>
      
      <tag>Hyprland</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
